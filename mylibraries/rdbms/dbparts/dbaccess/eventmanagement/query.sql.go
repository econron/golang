// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: query.sql

package dbaccess

import (
	"context"
)

const createEvent = `-- name: CreateEvent :exec
INSERT INTO events (name, description, start_time, end_time, location) 
VALUES ($1, $2, $3, $4, $5)
`

func (q *Queries) CreateEvent(ctx context.Context) error {
	_, err := q.db.ExecContext(ctx, createEvent)
	return err
}

const deleteEvent = `-- name: DeleteEvent :exec
DELETE FROM events WHERE id = $1
`

func (q *Queries) DeleteEvent(ctx context.Context) error {
	_, err := q.db.ExecContext(ctx, deleteEvent)
	return err
}

const getEventById = `-- name: GetEventById :one
SELECT id, name, description, start_time, end_time, location, created_at, updated_at FROM events WHERE id = $1
`

func (q *Queries) GetEventById(ctx context.Context) (Event, error) {
	row := q.db.QueryRowContext(ctx, getEventById)
	var i Event
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Description,
		&i.StartTime,
		&i.EndTime,
		&i.Location,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const updateEvent = `-- name: UpdateEvent :exec
UPDATE events 
SET name = $2, description = $3, start_time = $4, end_time = $5, location = $6 
WHERE id = $1
`

func (q *Queries) UpdateEvent(ctx context.Context) error {
	_, err := q.db.ExecContext(ctx, updateEvent)
	return err
}
