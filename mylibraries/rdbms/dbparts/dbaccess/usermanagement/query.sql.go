// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: query.sql

package dbaccess

import (
	"context"
)

const createUser = `-- name: CreateUser :exec
INSERT INTO users (username, email, password) 
VALUES ($1, $2, $3)
`

func (q *Queries) CreateUser(ctx context.Context) error {
	_, err := q.db.ExecContext(ctx, createUser)
	return err
}

const deleteUser = `-- name: DeleteUser :exec
DELETE FROM users WHERE id = $1
`

func (q *Queries) DeleteUser(ctx context.Context) error {
	_, err := q.db.ExecContext(ctx, deleteUser)
	return err
}

const getUserById = `-- name: GetUserById :one
SELECT id, username, email, password, created_at, updated_at FROM users WHERE id = $1
`

func (q *Queries) GetUserById(ctx context.Context) (User, error) {
	row := q.db.QueryRowContext(ctx, getUserById)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Username,
		&i.Email,
		&i.Password,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const updateUser = `-- name: UpdateUser :exec
UPDATE users 
SET email = $2, password = $3 
WHERE id = $1
`

func (q *Queries) UpdateUser(ctx context.Context) error {
	_, err := q.db.ExecContext(ctx, updateUser)
	return err
}
